from bs4 import BeautifulSoup
from functools import reduce
from google_tables.to_table import write
from school_website.get_api_homeworks import get_homeworks
import os

# === –°–ø–∏—Å–æ–∫ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã ===
GROUP = [
    "–î–º–∏—Ç—Ä–∏–π –ü–æ—Å—Ç–Ω–æ–≤",
    "–ù–∏–∫–∏—Ç–∞ –ú–æ—Ä–æ–∑–æ–≤",
    "–î–∏–º–∞ –ë–µ—Å–æ–≥–æ–Ω–æ–≤",
    "–ü–æ–ª–∏–Ω–∞ –°–æ–Ω",
    "–ï–≥–æ—Ä –ü–∞—Ä–±—É–∑–∏–Ω",
    "–î–∞–Ω–∏–∏–ª –õ—É—á–∫–æ",
    "–¢–∏–º—É—Ä –ú–∞—Ö–º—É–¥–æ–≤",
    "–î–µ–Ω–∏—Å –ì–∞–Ω–∞–≥–∏–Ω",
    "–ò–≤–∞–Ω –†–æ–º–∞–Ω–æ–≤",
    "–î–º–∏—Ç—Ä–∏–π –ù–æ—Ä–º–æ–≤",
    "–ò–≤–∞–Ω –®–∏–≥–∞–Ω–æ–≤",
    "–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ñ–∏—Ö–∞—Ä–µ–≤–∞",
    "–∞—Ä–∏–Ω–∞ –∫–æ–Ω–≤–∏—Å–∞—Ä",
    "–í–∏–∫—Ç–æ—Ä–∏—è –ê—Ö—É–Ω–æ–≤–∞",
    "–°–æ—Ñ—å—è –®–∏—à–∫–∏–Ω–∞",
    "–¢–∏–º—É—Ä –Æ–ª–¥–∞—à–µ–≤",
    "–ö–∏—Ä–∏–ª–ª –ì–Ω—É—Å–æ–≤",
    "–ê–ª–∏–Ω–∞ –ö–æ–ª–æ—Å–∫–æ–≤–∞",
    "–ü–æ–ª–∏–Ω–∫–∞ –ö–∞—à–∏—Ä—Å–∫–∞—è",
    "–ê–ª–µ–∫—Å–µ–π –õ–∏–ø—Å–∫–∏–π",
    "–†–æ–º–∞–Ω –ì–∞–∞–∫",
    "–î–∞–Ω–∏–ª–∞ –ó–æ—Ä—á–µ–Ω–∫–æ",
    "Vlada Kalinskaya",
    "–°–æ—Ñ–∞ –ú–∞—Ä—Ç—ã–Ω–æ–≤–∞",
    "–°—Ç–µ–ø–∞–Ω –ß—É–≥—É–Ω–æ–≤",
    "–í–µ—Ä–æ–Ω–∏–∫–∞ –ì–æ—Ä–±",
    "–ó–∞—Ö–∞—Ä .",
    "Egor Averchenkov",
    "–ê–π—Å—ë–Ω–∞ –°–≤–µ—Ç–ª–æ–≤–∞",
    "Nikita Ageev",
    "–ê–ª–ª–∞ –ú–∞—Ä—É—â–∞–∫",
    "–ë–µ–∫—Ç–∞–≥–∏—Ä–æ–≤ –î–∞–Ω–∏—è–ª –¢–∞–≥–∏—Ä–æ–≤–∏—á",
    "„É¥„Ç©„Ç§„Ç∑„É¢„Ç§ „Éì„É©„ÇØ„Éà„ÉÉ„Éà",
    "–í–∞–ª–µ—Ä–∏—è –¢—É—Ä–æ–≤—Å–∫–∞—è",
    "–§—Ä–∏—Ü–ª–µ—Ä –í–∏–∫—Ç–æ—Ä–∏—è –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞"
]

def write_lesson_homework(s, lesson_id, lesson_title, deadline):
    page = get_homeworks(s, lesson_id)
    soup = BeautifulSoup(page.text, "html.parser")
    print(f'Made all of the requests to the {os.getenv("API_DOMAIN")}!')
    print('Collect information about students...')

    students = []

    for row in soup.findAll('tr', class_='odd'):
        items = row.findAll('td')
        if len(items) < 7:
            continue

        name = items[2].get_text(strip=True)

        # üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å —É—á–µ–Ω–∏–∫–∞ –∫ –≥—Ä—É–ø–ø–µ
        if name not in GROUP:
            continue

        about_guy = [name]

        # üîπ –ò–¥—ë–º –ø–æ –≤—Å–µ–º –¥–æ–º–∞—à–∫–∞–º, –Ω–∞—á–∏–Ω–∞—è —Å 6-–≥–æ –∏–Ω–¥–µ–∫—Å–∞
        for hmw in items[6:]:
            link = hmw.find("a", href=True)
            if link:
                spans = [sp.get_text(strip=True) for sp in link.find_all("span")]
                if spans:
                    mark = spans[0].split("/")[0]  # üîπ –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –¥–æ "/"
                    about_guy.append(mark)
                else:
                    about_guy.append("—Å–¥–∞–Ω–æ")
            else:
                span = hmw.find("span")
                if span:
                    about_guy.append(span.get_text(strip=True))
                else:
                    about_guy.append("–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

        students.append(about_guy)

    # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (A-Z —Å–Ω–∞—á–∞–ª–∞ –ª–∞—Ç–∏–Ω–∏—Ü–∞)
    students.sort(key=lambda x: (ord('A') <= ord(x[0][0].upper()) <= ord('Z'), x[0]))

    print('Make changes at table...')
    iterator = iter(reduce(lambda x, y: x + y, [k[1:] for k in students]))
    write(
        title=lesson_title,
        deadline=deadline,
        q_students=len(students),
        grades=iterator,
        totals=[''] * (len(students[0]) - 1)
    )
